package com.aztlansoft.koua.dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

import com.aztlansoft.koua.model.KouaMessage;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * DAO for table KOUA_MESSAGE.
 */
public class KouaMessageDao extends AbstractDao<KouaMessage, Long>
{

  public static final String TABLENAME = "KOUA_MESSAGE";

  /**
   * Properties of entity KouaMessage.<br/>
   * Can be used for QueryBuilder and for referencing column names.
   */
  public static class Properties
  {
    public final static Property Id = new Property(0, Long.class, "id", true, "_id");
    public final static Property Operacion = new Property(1, String.class, "operacion", false, "OPERACION");
    public final static Property Monto = new Property(2, String.class, "monto", false, "MONTO");
    public final static Property Autorizacion = new Property(3, String.class, "autorizacion", false, "AUTORIZACION");
    public final static Property Fecha = new Property(4, String.class, "fecha", false, "FECHA");
  }

  ;


  public KouaMessageDao(DaoConfig config)
  {
    super(config);
  }

  public KouaMessageDao(DaoConfig config, DaoSession daoSession)
  {
    super(config, daoSession);
  }

  /**
   * Creates the underlying database table.
   */
  public static void createTable(SQLiteDatabase db, boolean ifNotExists)
  {
    String constraint = ifNotExists ? "IF NOT EXISTS " : "";
    db.execSQL("CREATE TABLE " + constraint + "'KOUA_MESSAGE' (" + //
            "'_id' INTEGER PRIMARY KEY ," + // 0: id
            "'OPERACION' TEXT NOT NULL ," + // 1: operacion
            "'MONTO' TEXT," + // 2: monto
            "'AUTORIZACION' TEXT," + // 3: autorizacion
            "'FECHA' TEXT);"); // 4: fecha
  }

  /**
   * Drops the underlying database table.
   */
  public static void dropTable(SQLiteDatabase db, boolean ifExists)
  {
    String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'KOUA_MESSAGE'";
    db.execSQL(sql);
  }

  /**
   * @inheritdoc
   */
  @Override
  protected void bindValues(SQLiteStatement stmt, KouaMessage entity)
  {
    stmt.clearBindings();

    Long id = entity.getId();
    if (id != null)
    {
      stmt.bindLong(1, id);
    }
    stmt.bindString(2, entity.getOperacion());

    String monto = entity.getMonto();
    if (monto != null)
    {
      stmt.bindString(3, monto);
    }

    String autorizacion = entity.getAutorizacion();
    if (autorizacion != null)
    {
      stmt.bindString(4, autorizacion);
    }

    String fecha = entity.getFecha();
    if (fecha != null)
    {
      stmt.bindString(5, fecha);
    }
  }

  /**
   * @inheritdoc
   */
  @Override
  public Long readKey(Cursor cursor, int offset)
  {
    return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
  }

  /**
   * @inheritdoc
   */
  @Override
  public KouaMessage readEntity(Cursor cursor, int offset)
  {
    KouaMessage entity = new KouaMessage( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.getString(offset + 1), // operacion
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // monto
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // autorizacion
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4) // fecha
    );
    return entity;
  }

  /**
   * @inheritdoc
   */
  @Override
  public void readEntity(Cursor cursor, KouaMessage entity, int offset)
  {
    entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
    entity.setOperacion(cursor.getString(offset + 1));
    entity.setMonto(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
    entity.setAutorizacion(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
    entity.setFecha(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
  }

  /**
   * @inheritdoc
   */
  @Override
  protected Long updateKeyAfterInsert(KouaMessage entity, long rowId)
  {
    entity.setId(rowId);
    return rowId;
  }

  /**
   * @inheritdoc
   */
  @Override
  public Long getKey(KouaMessage entity)
  {
    if (entity != null)
    {
      return entity.getId();
    } else
    {
      return null;
    }
  }

  /**
   * @inheritdoc
   */
  @Override
  protected boolean isEntityUpdateable()
  {
    return true;
  }

}
